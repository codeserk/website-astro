---
import { Image } from 'astro:assets'
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import { getEntryNameInitials, getImageMetadata } from '~/utils/content'

import { classes } from '~/utils/style'
import ContentMarkdown from '../Content/ContentMarkdown.astro'

interface Props {
  readonly title: string
  readonly heading?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5'
  readonly link: string
  readonly summary?: string
  readonly image?: string
  readonly imageType?: `${'circled' | 'bordered'} ${'sm' | 'md' | 'lg'}`
  readonly date?: Date
}

dayjs.extend(relativeTime)

const { title, heading, link, summary, image, imageType, date } = Astro.props
const timeAgo = date ? dayjs(date).fromNow() : undefined
const imageTypeClass = imageType ?? 'bordered sm'
const imageMeta = await getImageMetadata(image)
const Heading = heading ?? 'h3'
const initials = getEntryNameInitials(title)
---

<div class={classes('PageLink', { withImage: !!image })}>
  <div class={'linkContent'}>
    <a class:list={['titleContainer']} href={link}>
      <Heading class={classes('title')}>{title}</Heading>
      {
        imageMeta ? (
          <Image
            class={classes('image', imageTypeClass)}
            src={imageMeta}
            width={290}
            height={290}
            alt={title}
            loading="eager"
          />
        ) : (
          <span class={classes('imagePlaceholder', 'image', imageTypeClass)}>{initials}</span>
        )
      }
    </a>

    {
      summary && (
        <div class={classes('summary', 'content no-margin')}>
          <ContentMarkdown content={summary} />
        </div>
      )
    }

    <div class={'meta'}>
      <slot />
      {date && <span class="timeAgo">{timeAgo}</span>}
    </div>
  </div>
</div>

<style>
  .PageLink {
    display: block;
    width: 400px;
    margin: 2em 2em;
    text-align: center;
    position: relative;

    .linkContent {
      position: relative;
      overflow: hidden;
      height: 100%;
      flex: 1;
      display: flex;
      flex-direction: column;

      .titleContainer {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        position: relative;
        gap: 1.25em;

        .title {
          font-size: 2rem;
          text-align: center;
          z-index: 1;
          line-height: 1em;
          letter-spacing: 1px;
          font-weight: bold;
          color: white;
        }

        .image {
          object-fit: cover;
          width: 300px;
          height: 300px;
          filter: brightness(0.95) saturate(1.1);
        }
      }

      .imagePlaceholder {
        background-color: #000;
        width: 300px;
        height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 8rem;
      }

      .summary {
        text-align: center;
      }
    }

    a:hover {
      .image {
        filter: none !important;
      }
      .imagePlaceholder {
        background-color: #111;
      }
    }

    .summary {
      padding: 1em;
    }

    .meta {
      display: flex;
      padding: 0 1em 1em 1em;
      flex-direction: column;
      gap: 0.5em;
    }
  }

  @media (max-width: 640px) {
    .PageLink {
      width: 100%;
      margin: 1.5em 0.5em;

      .linkContent {
        font-size: 0.9em;
      }
    }
  }
</style>
