---
import { Image } from 'astro:assets'
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import { getImageMetadata } from '~/utils/content'
import { classes } from '~/utils/style'
import ContentMarkdown from '../Content/ContentMarkdown.astro'

interface Props {
  readonly title: string
  readonly link: string
  readonly summary: string
  readonly image?: string
  readonly imageType?: `${'circled' | 'bordered'} ${'sm' | 'md' | 'lg'}`
  readonly date?: Date
}

dayjs.extend(relativeTime)

const { title, link, summary, image, imageType, date } = Astro.props
const timeAgo = date ? dayjs(date).fromNow() : undefined
const imageTypeClass = imageType ?? 'circled md'
const imageMeta = await getImageMetadata(image)
---

<div class={classes('PageLink', { withImage: !!image })}>
  <div class={'hoverTitle'}>{title}</div>
  <div class={'linkContent'}>
    <a class={'titleContainer'} href={link}>
      <h3 class={classes('title')}>{title}</h3>
      {
        imageMeta && (
          <Image
            class={classes('image', imageTypeClass)}
            src={imageMeta}
            width={290}
            height={290}
            alt={title}
            loading="eager"
          />
        )
      }
      {!image && <span class={classes('imagePlaceholder', 'image', imageTypeClass)} />}
    </a>

    {
      summary && (
        <div class={classes('summary', 'content no-margin')}>
          <ContentMarkdown content={summary} />
        </div>
      )
    }

    <div class={'fill'}></div>
    <div class={'meta'}>
      <slot />
      {date && <span class="timeAgo">{timeAgo}</span>}
    </div>
  </div>
</div>

<style>
  .PageLink {
    display: block;
    width: 400px;
    margin: 1em 2em;
    text-align: center;
    position: relative;
    border: 4px solid transparent;

    .hoverTitle {
      position: absolute;
      top: calc(-1em - 4px);
      left: -4px;
      right: -4px;
      font-size: 1.5rem;
      line-height: 1em;
      padding: 0.5rem;
      display: none;
      z-index: 1;

      font-size: 2rem;
      text-align: center;
      z-index: 1;
      line-height: 1em;
      color: black;
      font-weight: bold;
      color: white;
    }

    .linkContent {
      position: relative;
      overflow: hidden;
      height: 100%;
      flex: 1;
      display: flex;
      flex-direction: column;

      .titleContainer {
        text-align: center;
        align-self: center;
        width: 300px;
        height: 300px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 1em;
      }

      .title {
        font-size: 2rem;
        text-align: center;
        z-index: 1;
        line-height: 1em;
        color: black;
        font-weight: bold;
      }

      .image {
        position: absolute;
        object-fit: cover;
        width: 300px;
        height: 300px;
        object-fit: cover;
      }

      .imagePlaceholder {
        background-color: white;
        width: 300px;
        height: 300px;
      }

      .fill {
        flex: 1;
        min-height: 0.5em;
      }
    }

    a:hover {
      filter: none !important;
    }

    &.withImage {
      .title {
        color: white;
      }

      .image {
        filter: brightness(0.4) saturate(1.25) grayscale(0.8);
      }
    }

    .summary {
      padding: 1em;
    }

    .meta {
      display: flex;
      padding: 0 1em 1em 1em;
      flex-direction: column;
      gap: 0.5em;
    }

    &:hover {
      .hoverTitle {
        display: block;
      }

      &::before {
        content: '';
        position: absolute;
        left: -4px;
        right: 40px;
        bottom: calc(-1em - 4px);
        height: 1em;
      }

      &.withImage {
        .image {
          filter: none;
        }
      }

      .title {
        visibility: hidden;
      }
    }
  }

  @media (max-width: 640px) {
    .PageLink {
      width: 100%;
      margin: 1.5em 0.5em;

      .linkContent {
        font-size: 0.9em;
      }
    }
  }
</style>
