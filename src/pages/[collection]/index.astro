---
import { getCollection, type AnyEntryMap, type ContentEntryMap } from 'astro:content'
import PageContainer from '~/components/Page/PageContainer.astro'
import PageHeader from '~/components/Page/PageHeader.astro'
import PageLinksGrid from '~/components/Page/PageLinksGrid.astro'
import Layout from '../../layouts/Layout.astro'
import { getEntryIsRoot, sortEntries, type Collection } from '~/utils/content'
import PageCareerLink from '~/components/Page/Link/PageCareerLink.astro'
import PageChallengeLink from '~/components/Page/Link/PageChallengeLink.astro'

const COMPONENTS_MAP: Partial<Record<Collection, any>> = {
  career: PageCareerLink,
  challenge: PageChallengeLink,
}

export async function getStaticPaths() {
  const COLLECTIONS = [
    'article',
    'development',
    'language',
    'framework',
    'database',
    'message-broker',
    'technology',
    'project',
    'career',
    'challenge',
  ] satisfies (keyof AnyEntryMap)[]

  return COLLECTIONS.map((collection) => ({ params: { collection }, props: { collection } }))
}

interface Props {
  readonly collection: keyof ContentEntryMap
}

const { collection } = Astro.props
const entries = sortEntries(await getCollection(collection, getEntryIsRoot))
const Component = COMPONENTS_MAP[collection]
---

<Layout>
  <PageContainer overlay>
    <PageHeader layout="two-columns" title={collection} breadcrumbs={[]} />

    <PageLinksGrid links={entries ?? []} component={Component} />
  </PageContainer>
</Layout>
