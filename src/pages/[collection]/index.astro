---
import { getCollection, getEntry, type AnyEntryMap, type ContentEntryMap } from 'astro:content'
import PageContainer from '~/components/Page/PageContainer.astro'
import PageHeader from '~/components/Page/PageHeader.astro'
import PageLinksGrid from '~/components/Page/PageLinksGrid.astro'
import Layout from '../../layouts/Layout.astro'
import { getEntryIsRoot, getEntryRenderContent, sortEntries, type Collection, type Entry } from '~/utils/content'
import PageCareerLink from '~/components/Page/Link/PageCareerLink.astro'
import PageChallengeLink from '~/components/Page/Link/PageChallengeLink.astro'
import Link from '~/components/Content/Link.astro'
import PageContent from '~/components/Page/PageContent.astro'
import Image from '~/components/Content/Image.astro'
import Container from '~/components/Container.astro'

const COMPONENTS_MAP: Partial<Record<Collection, any>> = {
  career: PageCareerLink,
  challenge: PageChallengeLink,
}

export async function getStaticPaths() {
  const COLLECTIONS = [
    'blog',
    'development',
    'language',
    'framework',
    'database',
    'message-broker',
    'technology',
    'project',
    'career',
    'challenge',
    'model',
  ] satisfies (keyof AnyEntryMap)[]

  return COLLECTIONS.map((collection) => ({ params: { collection }, props: { collection } }))
}

interface Props {
  readonly collection: keyof ContentEntryMap
}

const collection = Astro.props.collection

let entry: Entry | undefined
let Content: any
if (collection) {
  entry = await getEntry('page', collection)
}
if (entry) {
  const render = await getEntryRenderContent(entry)
  Content = render?.Content
}

const entries = await sortEntries(await getCollection(collection, getEntryIsRoot))
const Component = COMPONENTS_MAP[collection]
---

<Layout>
  <PageContainer overlay>
    <PageHeader layout="two-columns" title={entry?.data.name ?? collection} breadcrumbs={[]} />

    <PageContent layout="two-columns">
      {Content && <Content components={{ a: Link, img: Image }} />}
    </PageContent>
    <div class="divider"></div>

    <Container layout="full">
      <PageLinksGrid links={entries ?? []} component={Component} />
    </Container>
  </PageContainer>
</Layout>

<style>
  .divider {
    margin-bottom: 96px;
  }
</style>
